from itertools import permutations
def has_hamiltonian_cycle(edges, n):
    graph = [[] for _ in range(n)]
    for u, v in edges:
        graph[u].append(v)
        graph[v].append(u)
    for p in permutations(range(1, n)):
        path = [0] + list(p) + [0]
        for i in range(n):
            if path[i + 1] not in graph[path[i]]:
                break
        else:
            return True
    return False
edges = [(0, 1), (1, 2), (2, 3), (3, 0), (0, 2)]
n = 4
print(has_hamiltonian_cycle(edges, n))  # Output: True
